// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;

public class DrinkManager {
	
	// need to call populate drinks list before anything
	private List<Drink> drinkList;
	private Drink currentDrink;

	private int maxTip;

	public DrinkManager() {
		this.drinkList = new List<Drink>();
		this.maxTip = 20;
	}

	// selects random drink from the drink array list
	public Drink nextDrink()
	{
		int randomNumber = getRandomNumber(drinkList.Count);
		this.currentDrink = drinkList[randomNumber];
		return this.currentDrink;
	}
	
	// picks random number between 0 and the integer given (includes 0 but not max)
	public int getRandomNumber(int max)
	{
		Random random = new Random(max);
		int randomNumber = random.Next();
		return randomNumber;
	}
	
	// figures out tip amount
	// need to cut off after 2 decimal places
	// maybe pick random number between -3/3? then add that to the total?
	// making sure it is over 0!
	public float getTipAmount(bool drinkSuccess) {
		if(!drinkSuccess){
		 	return -1.0f;
		}

		Random rand = new Random (this.maxTip);
		return this.currentDrink.getDifficulty() * rand.Next();
	}
	
	float roundTip(float tip)
	{
		return Math.Round(tip * 100f) / 100f;;
	}
	
	public bool madeSuccessfully(List<Ingredient> ingredients)
	{

		int actualIngredientCount = this.currentDrink.getIngredientCount();

		if (ingredients.Count != actualIngredientCount) {
			Debug.Log("Wrong Ingredient Count!");
			return false;
		}

		foreach (Ingredient ingredient in this.currentDrink.getIngredients()) {
			if(!ingredients.Contains(ingredient)) {
				Debug.Log("Missing Drink Ingredient: " + ingredient.getName());
				return false;
			}
		}

		return true;
		
	}

	
//	// For testing
//	// name, difficulty, tip, ingredients
//	private void populateDrinksList()
//	{
//		Color red = new Color(Color.RED);
//		Color green = new Color(Color.GREEN);
//		Color blue = new Color(Color.BLUE);
//		Color yellow = new Color(Color.YELLOW);
//		Color white = new Color(Color.WHITE);
//		
//		ArrayList<String> vw = new ArrayList<String>();
//		vw.add("Vodka");
//		vw.add("Water");
//		vw.add("Lime");
//		Drink vodkaWater = new Drink("Vodka Water",0,vw,green);
//		allDrinks.add(vodkaWater);
//		
//		ArrayList<String> rc = new ArrayList<String>();
//		rc.add("Rum");
//		rc.add("Coke");
//		rc.add("Ice");
//		Drink rumCoke = new Drink("Rum & Coke",2,rc,blue);
//		allDrinks.add(rumCoke);
//		
//		ArrayList<String> mtc = new ArrayList<String>();
//		mtc.add("Gin");
//		mtc.add("Lemon Juice");
//		mtc.add("Club Soda");
//		Drink tomCollins = new Drink("Major Tom Collins",4,mtc,yellow);
//		allDrinks.add(tomCollins);
//		
//		ArrayList<String> wr = new ArrayList<String>();
//		wr.add("Vodka");
//		wr.add("Kahlua");
//		wr.add("Cream");
//		Drink whiteRussian = new Drink("White Russian Space Shuttle",7,wr,white);
//		allDrinks.add(whiteRussian);
//		
//		ArrayList<String> qr = new ArrayList<String>();
//		qr.add("Clamato");
//		qr.add("Sun Sauce");
//		qr.add("Vodka");
//		Drink quasar = new Drink("Quasar",9,qr,red);
//		allDrinks.add(quasar);
//		
//	}
	
}
